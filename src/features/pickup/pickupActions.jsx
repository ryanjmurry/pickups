import { createNewPickup } from '../../app/common/util/helpers';
import moment from 'moment';

// firestore.add(collection, document) - adds new doc to pickups collection with autogenerated id
// firestore.set(collection/manualId, documentFieldObject) - creates look up collection joining pickups and users

export const createPickup = pickup => {
  return async (dispatch, getState, { getFirestore }) => {
    const firestore = getFirestore();
    const user = firestore.auth().currentUser;
    const photoURL = getState().firebase.profile.photoURL;
    let newPickup = createNewPickup(user, photoURL, pickup);
    try {
      let createdPickup = await firestore.add(`pickups`, newPickup);
      await firestore.set(`pickup_attendee/${createdPickup.id}_{user.uid}`, {
        pickupId: createdPickup.id,
        userUid: user.uid,
        pickupDate: pickup.date,
        host: true
      });
    } catch (error) {
      console.log(error);
    }
  };
};

export const updatePickup = pickup => {
  return async (dispatch, getState, { getFirestore }) => {
    const firestore = getFirestore();
    try {
      await firestore.update(`pickups/${pickup.id}`, pickup);
    } catch (error) {
      console.log(error);
    }
  };
};

export const cancelPickupToggle = (cancelled, pickupId) => {
  return async (dispatch, getState, { getFirestore }) => {
    const firestore = getFirestore();
    try {
      await firestore.update(`pickups/${pickupId}`, {
        cancelled: cancelled
      });
    } catch (error) {
      console.log(error);
    }
  };
};
